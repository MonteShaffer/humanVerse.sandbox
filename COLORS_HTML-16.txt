library|idx|hex.color|color|red|green|blue|alpha
HTML-16|1|#00FFFF|aqua|0|255|255|255
HTML-16|2|#000000|black|0|0|0|255
HTML-16|3|#0000FF|blue|0|0|255|255
HTML-16|4|#FF00FF|fuchsia|255|0|255|255
HTML-16|5|#808080|gray|128|128|128|255
HTML-16|6|#008000|green|0|128|0|255
HTML-16|7|#00FF00|lime|0|255|0|255
HTML-16|8|#800000|maroon|128|0|0|255
HTML-16|9|#000080|navy|0|0|128|255
HTML-16|10|#808000|olive|128|128|0|255
HTML-16|11|#800080|purple|128|0|128|255
HTML-16|12|#FF0000|red|255|0|0|255
HTML-16|13|#C0C0C0|silver|192|192|192|255
HTML-16|14|#008080|teal|0|128|128|255
HTML-16|15|#FFFFFF|white|255|255|255|255
HTML-16|16|#FFFF00|yellow|255|255|0|255

https://www.webstandards.org/learn/reference/charts/color_names/index.html
# optional class ... 
https://htmlcolorcodes.com/color-names/
# "proxima-soft", "Proxima Soft", "Proxima Nova Soft", Helvetica, Arial, sans-serif

https://htmlcolorcodes.com/color-names/
CSS-140 ... library|sublibrary|idx|hex.color|color.name|color.class|r|g|b|R.nearest|CSS.nearest

r|g|b before hex.color ... color.name=ucfirst

# downloading gargbage?
download.file("https://htmlcolorcodes.com/color-names/index.html", "C:/_R_/cnames.html");

str = readTextFile("C:/_R_/cnames.html");
fname = "C:/_R_/cnames.html"
furl = "https://htmlcolorcodes.com/color-names/index.html"

str = readChar(fname, file.info(fname)$size)

gzip?

curl::curl_download(furl, fname);

str = readTextFile(fname);

str.between() return multiple ... 


classes = 


<section id="gray">
	<tbody> rows ...
</section>


L = '<section id="';
R = '</section>';

sections = str.slice(L, str, R, keep=FALSE);
classes = v.truncate( str.before(DOUBLE_QUOTE, sections, 1), 10);

L = '<tr class="color-table__row">'
R = '</tr>'

colors = v.empty(str.slice(L, sections[1], R), 1);

data-hex=\"#CD5C5C\"
<td class=\"color-table__cell color-table__cell--name\">IndianRed</td>

L = 'data-hex="';
R = DOUBLE_QUOTE;

chex = toupper(str.slice(L, colors[1], R, keep=FALSE));

L = '<td class="color-table__cell color-table__cell--name">';
R = '</td>';

cname = str.slice(L, colors[1], R, keep=FALSE);


color.buildPalette(HEX, cnames, "css")

# css palette comparison ...
B = color.buildPalette(HEX, cnames, "css", type="CMYK-HSL")



yy = color.buildMap();

# DC143C  ... bad match to anything ... color selectors don't like CRIMSON?


1265284.28477793

n = length(HEX);  res = character(n); score = numeric(n); 
for(i in 1:n) { x = color.nearest(HEX[i], n=1); res[i] = as.character(x); score[i] = property.get("HVscore", x); print(i); flush.console(); } 
   

45 .. 9923cc?   DEAD ... no C0FFEE

HEX[45]

8b008b ? 

ADD ... 

FFDEAD ... 

A0522D

DCDCDC

HEX[19] ?? 

HEX[17] ?? 

myfive(score);
myfive(score)[5]
3/3 [max] 
99999.999 


myfive(score)
          0/3 [min] 1/3 [lower-trecile]        1/2 [median] 2/3 [upper-trecile]           3/3 [max] 
          26645.118          256193.682          511412.804          682065.064          999999.988 


myfive(score)
          0/3 [min] 1/3 [lower-trecile]        1/2 [median] 2/3 [upper-trecile]           3/3 [max] 
          26645.118          256193.682          511412.804          682065.064          999999.988 


0 - ~1,000,000


hist(score) is TRIMODAL ... 



1491, 1492, 1493
 xx = color.nearest("#FF1493", n=22, return="evelkjf"); head(xx); tail(xx); str(xx);
deeppink 



history_id	color	complement	triad		split		analogous		square			rectangle		harmony												monochromatic										
3	1874CD	CD7118	CD1874	74CD18	CDCC18	CD181A	181DCD	18CDCC	CD7118	CC18CD	1ACD18	CD7118	181ACD	CDCC18	1874CD	181DCD	6E18CD	C818CD	CD1877	CD181D	CD6E18	CDC818	77CD18	1DCD18	18CD6E	18CDC8	000000	232B32	1C2B39	395571	2B5680	4081BF	2B81D5	71ABE3	63ABF1	B1D5F8	

NOTICE the 1874 rotates around the wheel ... 



The Pittsburgh Steelers colors HEX codes are #FFB612 for Steelers gold, 
#101820 for black, #003087 for blue, #C60C30 for red, and #A5ACAF for silver.

#FFB90F darkgoldenrod1 0.0016257715
#104E8B    dodgerblue4 0.025585508  ??? euclidean is MESSING THIS UP ... 
#104E8B    dodgerblue4 0.025541146 ... black/blue are the SAME map ...
 #CD919E      pink3 0.032362080
#9AC0CD    lightblue3 0.016036342

alpha = 0.01/2 ... reject THE choice ... 0.005


#ACDCAC ... #9BCD9B darkseagreen3 0.00042472252

0.005
0.00042472252  ... 10x better than borderline ... nice pick 

#BDEADB ... #76EEC6    aquamarine2 0.0081694627
0.005
0.00816946 ... GOOD rule, not a great match ... 

#0DEAD0

RUSSIAN ... good.match ... 

## CLEARLY some biases in colorspace, like OLSON names... 



- attr(*, "input.was")= chr "#8a8b8c"
 - attr(*, "best")= chr [1:22] "slategray" "lightslategray" "slategray4" "slategray3" ...
  ..- attr(*, "HVscore")= num [1:22] 0.000763 0.000772 0.002963 0.006464 0.008209 ...
  ..- attr(*, "good.match")= logi [1:22] TRUE TRUE TRUE FALSE FALSE FALSE ...
  ..- attr(*, "color.hex")= chr [1:22] "#708090" "#778899" "#6C7B8B" "#9FB6CD" ...


xx = color.nearest("#8a8b8c", n=22, return="evelkjf"); head(xx); tail(xx); str(xx);




 

# really shows that there are GAPS in the R-colorspace ... royalblue4 0.06304096


xx = color.nearest("#101828", n=22, return="evelkjf"); head(xx); tail(xx); str(xx);
xx = color.nearest("#101828", n=1, return="bevelkjf"); head(xx); tail(xx); str(xx);









228B22 ... 696969 ... 778899

86800.147          834586.255         1665997.744         2221921.018         3257637.884 



